package com.dfat.fakerinc.guidummy;

import android.app.Activity;
import android.app.Notification;
import android.app.NotificationManager;
import android.content.ComponentName;
import android.content.Intent;
import android.content.ServiceConnection;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.os.Bundle;
import android.os.IBinder;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

/**
 * Created by fakerinc on 30.11.16.
 */

public class StartStopScan extends Activity {

    public class SettingsPage extends AppCompatActivity {

        private TextView view;
        private Button startTask;
        private Button stopTask;

        public MyService mService;
        boolean isBound = false;
        private boolean analyzing;

        public SqliteDBHelper sqlHelper;

        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.settingspage);

            sqlHelper = SqliteDBHelper.getInstance(getApplicationContext());

            view = (TextView) findViewById(R.id.textView);
            startTask = (Button) findViewById(R.id.startTask);
            startTask.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    startTask1();
                }
            });

            stopTask = (Button) findViewById(R.id.stopTask);
            stopTask.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    stopTask1();
                }
            });

            startAndBindService();
        }

        @Override
        public boolean onCreateOptionsMenu(Menu menu) {
            MenuInflater inflater = getMenuInflater();
            inflater.inflate(R.menu.menu_options, menu);
            return super.onCreateOptionsMenu(menu);
        }

        @Override
        public boolean onOptionsItemSelected(MenuItem item) {

            int id = item.getItemId();
            if (id == R.id.impressum) {
                // do stuff
                return true;
            }


            return super.onOptionsItemSelected(item);
        }

        @Override
        protected void onDestroy() {
            if (mConnection != null) {
                unbindService(mConnection);
            }
            super.onDestroy();
        }


        void startAndBindService() {
            Intent intent = new Intent(getApplicationContext(), MyService.class);
            startService(intent);
            bindService(intent, mConnection, 0);
        }

        private ServiceConnection mConnection = new ServiceConnection() {
            @Override
            public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
                MyService.LocalBinder binder = (MyService.LocalBinder) iBinder;
                mService = binder.getService();
                isBound = true;
            }

            @Override
            public void onServiceDisconnected(ComponentName componentName) {
                isBound = false;
            }
        };


        public void startTask1() {
            analyzing = mService.analyzing;

            if (!analyzing) {
                Toast.makeText(getApplicationContext(), "Task started...", Toast.LENGTH_SHORT).show();
                view.setText("Analyzing...");
                mService.setRepeatTask();

            } else {
                Toast.makeText(getApplicationContext(), "Already started...", Toast.LENGTH_SHORT).show();

            }
        }

        public void stopTask1() {
            analyzing = mService.analyzing;

            if (analyzing) {

                Toast.makeText(getApplicationContext(), "Task stopped...", Toast.LENGTH_SHORT).show();
                mService.cancelRepeatTask();

                view.setText("Entries in DB: " + sqlHelper.entries());

                permissionRequest(this);

            } else {
                Toast.makeText(getApplicationContext(), "Already stopped...", Toast.LENGTH_SHORT).show();
            }
            showNotification();
        }

        public void showNotification() {
            NotificationManager notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);

            Notification notification = new Notification.Builder(this)
                    .setSmallIcon(R.drawable.boo)
                    .setContentTitle("Operation DFAT")
                    .setContentText("Task stopped with count:" + sqlHelper.entries())
                    .build();

            notificationManager.notify(0, notification);
        }

        public void permissionRequest(Activity activity) {
            String[] permissionStorage = {android.Manifest.permission.READ_EXTERNAL_STORAGE, android.Manifest.permission.WRITE_EXTERNAL_STORAGE};
            int permission = ActivityCompat.checkSelfPermission(activity, android.Manifest.permission.WRITE_EXTERNAL_STORAGE);
            if (permission != PackageManager.PERMISSION_GRANTED) {

                ActivityCompat.requestPermissions(activity, permissionStorage, 1);
            } else {
                sqlHelper.DBtoText();
            }

        }

        @Override
        public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
            switch (requestCode) {
                case 1:
                    if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                        sqlHelper.DBtoText();
                    }
            }
        }

        public void settingsButton(MenuItem item) {
            Intent intent = new Intent(getApplicationContext(), com.dfat.fakerinc.guidummy.SettingsPage.class);
            startActivity(intent);
        }

        public void getHelp(MenuItem item) {

        }

        public void getAboutUs(MenuItem item) {


        }
    }

}
