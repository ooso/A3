package com.op_dfat;

import android.os.AsyncTask;
import android.util.Log;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;


public class MyClient {

    private String serverURL = "http://dfat.cs.hs-rm.de:47381/test.php";

    public String POST(String app_name, String opid_name, String last_used, String app_running){

        JSONObject json = new JSONObject();
        try {
            json.put("app_name", app_name);
            json.put("opid_name", opid_name);
            json.put("last_used", last_used);
            json.put("app_running", app_running);

            new SendBlacklistEntry().execute(serverURL, json.toString());
        } catch (JSONException e) {
            e.printStackTrace();
            return "POST failed: exception building JSON";
        }
        return json.toString();
    }

    private class SendBlacklistEntry extends AsyncTask<String, Void, String> {

        @Override
        protected String doInBackground(String... params) {

            String data = "";

            HttpURLConnection httpURLConnection = null;
            try {

                httpURLConnection = (HttpURLConnection) new URL(params[0]).openConnection();
                httpURLConnection.setRequestMethod("POST");

                httpURLConnection.setDoOutput(true);

                DataOutputStream dos = new DataOutputStream(httpURLConnection.getOutputStream());
                dos.writeBytes("PostData=" + params[1]);
                dos.flush();
                dos.close();

                InputStream inputStream = httpURLConnection.getInputStream();
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);

                int inputStreamData = inputStreamReader.read();
                while (inputStreamData != -1) {
                    char current = (char) inputStreamData;
                    inputStreamData = inputStreamReader.read();
                    data += current;
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                if (httpURLConnection != null) {
                    httpURLConnection.disconnect();
                }
            }

            return data;
        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            Log.e("TAG", result);
        }
    }
}
