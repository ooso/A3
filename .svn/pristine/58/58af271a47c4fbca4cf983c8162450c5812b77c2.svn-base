package com.op_dfat;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import java.util.ArrayList;

public class Activity_app_details extends AppCompatActivity {

    ListView listView;
    String appName;
    String packageName;
    String timestamp;
    ArrayList<String> tmp = new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_app_details);
        Intent intent = getIntent();
        appName = intent.getStringExtra("appName");
        packageName = intent.getStringExtra("packageName");
        timestamp = intent.getStringExtra("timestamp");
        createList();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_options, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    private void createList(){

        ImageView iv = (ImageView) findViewById(R.id.appDetailIcon);
        Drawable icon = Utility.getAppIcon(getApplicationContext(), packageName);
        if (icon == null) {
            icon = getResources().getDrawable(R.drawable.boo, null);
        }
        iv.setImageDrawable(icon);


        TextView tv = (TextView) findViewById(R.id.appDetailName);
        tv.setText(appName);

        listView = (ListView) findViewById(R.id.listViewResources);

        ArrayList<String> resourceNames = getResourceListByAppName(packageName);
        ArrayList<String> countList = getCountListByAppName(packageName);

        int listSize = resourceNames.size();
        final Resources resources[] = new Resources[listSize];
        boolean anomalous = false;

        for(int i = 0; i < listSize; i++){
            if(resourceIsAnomaly(packageName, resourceNames.get(i))){
                anomalous = true;
            }
            resources[i] = new Resources(countList.get(i), resourceNames.get(i), anomalous);
            anomalous = false;
        }

        Adapter_App_Details adapter = new Adapter_App_Details(getApplicationContext(), R.id.activity_app_details, resources );

        // Assign adapter to ListView
        listView.setAdapter(adapter);

        // ListView Item Click Listener
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                if(resources[position].anomalous) {
                    AlertDialog alertDialog = new AlertDialog.Builder(Activity_app_details.this).create();
                    alertDialog.setTitle(R.string.anomalousResourceExplanationTitle);
                    String msg = getAnomalyText(packageName, resources[position].resource);
                    alertDialog.setMessage(msg);
                    alertDialog.setButton(AlertDialog.BUTTON_NEUTRAL, "OK",
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog, int which) {
                                    dialog.dismiss();
                                }
                            });
                    alertDialog.show();
                }
            }
        });
    }

    private ArrayList<String> getResourceListByAppName(String packageName){
        return SqliteDBHelper.getInstance(this).query_select_list("SELECT " + SqliteDBStructure.RESOURCE + " FROM " + SqliteDBStructure.DATA_ANALYZING + " WHERE " + SqliteDBStructure.SCAN_TIME + " = '" + timestamp + "' AND " + SqliteDBStructure.APP_NAME + " = '" + packageName + "' ORDER BY " + SqliteDBStructure.RESOURCE);
    }

    private ArrayList<String> getCountListByAppName(String packageName){
        return SqliteDBHelper.getInstance(this).query_select_list("SELECT " + SqliteDBStructure.COUNT + " FROM " + SqliteDBStructure.DATA_ANALYZING + " WHERE " + SqliteDBStructure.SCAN_TIME + " = '" + timestamp + "' AND " + SqliteDBStructure.APP_NAME + " = '" + packageName + "' ORDER BY " + SqliteDBStructure.RESOURCE);
    }

    private ArrayList<String> getAnomalyResources(String packageName){
        return SqliteDBHelper.getInstance(this).query_select_list("SELECT " + SqliteDBStructure.RESOURCE + " FROM " + SqliteDBStructure.DATA_ANALYZING + " WHERE " + SqliteDBStructure.SCAN_TIME + " = '" + timestamp + "' AND " + SqliteDBStructure.APP_NAME + " = '" + packageName + "' AND " + SqliteDBStructure.ANOMALY + " = 1");
    }

    public void settingsButton(MenuItem item) {
        Intent intent = new Intent(getApplicationContext(), SettingsPage.class);
        startActivity(intent);
    }

    public void getHelp(MenuItem item){

    }

    public void getAboutUs(MenuItem item){

    }

    private boolean resourceIsAnomaly(String app, String res){
        tmp = SqliteDBHelper.getInstance(this).query_select_list("SELECT " + SqliteDBStructure.ANOMALY + " FROM " + SqliteDBStructure.DATA_ANALYZING + " WHERE " + SqliteDBStructure.SCAN_TIME + " = '" + timestamp + "' AND " + SqliteDBStructure.APP_NAME + " = '" + app + "' AND " + SqliteDBStructure.RESOURCE + " = '"+res+"'");
        if(tmp.contains("1")){
            return true;
        }else{
            return false;
        }
    }

    private String getAnomalyText(String app, String res){
        tmp = SqliteDBHelper.getInstance(this).query_select_list("SELECT " + SqliteDBStructure.ANOMALY_REASON + " FROM " + SqliteDBStructure.DATA_ANALYZING + " WHERE " + SqliteDBStructure.SCAN_TIME + " = '" + timestamp + "' AND " + SqliteDBStructure.APP_NAME + " = '" + app + "' AND " + SqliteDBStructure.RESOURCE + " = '"+res+"'");
        return tmp.get(0);
    }
}
