package com.op_dfat;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.SearchView;

import java.sql.SQLClientInfoException;
import java.util.ArrayList;

import static android.content.ContentValues.TAG;


/**
 * A simple {@link Fragment} subclass.
 * Activities that contain this fragment must implement the
 * {@link Fragment_old.OnFragmentInteractionListener} interface
 * to handle interaction events.
 * Use the {@link Fragment_old#newInstance} factory method to
 * create an instance of this fragment.
 */
public class Fragment_old extends Fragment {
    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    private ListView lv;
    private SearchView sv;
    android.widget.Filter filter;
    private OnFragmentInteractionListener mListener;

    public Fragment_old() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment Fragment_old.
     */
    // TODO: Rename and change types and number of parameters
    public static Fragment_old newInstance(String param1, String param2) {
        Fragment_old fragment = new Fragment_old();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_old, container, false);

        // Inflate the layout for this fragment
        return view;
    }

    /* Function created by default and is called by a button that was deleted
    // TODO: Rename method, update argument and hook method into UI event
    public void onButtonPressed(Uri uri) {
        if (mListener != null) {
            mListener.onFragmentInteraction(uri);
        }
    }
    */

    @Override
    public void onAttach(Context context) {
        super.onAttach(context);
        if (context instanceof OnFragmentInteractionListener) {
            mListener = (OnFragmentInteractionListener) context;
        } else {
            throw new RuntimeException(context.toString()
                    + " must implement OnFragmentInteractionListener");
        }
    }

    @Override
    public void onDetach() {
        super.onDetach();
        mListener = null;
    }

    /**
     * This interface must be implemented by activities that contain this
     * fragment to allow an interaction in this fragment to be communicated
     * to the activity and potentially other fragments contained in that
     * activity.
     * <p>
     * See the Android Training lesson <a href=
     * "http://developer.android.com/training/basics/fragments/communicating.html"
     * >Communicating with Other Fragments</a> for more information.
     */
    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        void onFragmentInteraction(Uri uri);
    }

    public void getScanList(){
        sv = (SearchView) getView().findViewById(R.id.searchViewScans);
        lv = (ListView) getView().findViewById(R.id.listViewScans);
        ArrayList<String> scanList = createList();

        //ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(getActivity(), R.layout.fragment_old, scanList);
        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(getActivity(), android.R.layout.simple_list_item_1, scanList);
        lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                String timestamp = lv.getItemAtPosition(i).toString();

                Intent intent = new Intent(getActivity().getApplicationContext(), Activity_apps.class);
                intent.putExtra("timestamp", timestamp);
                startActivity(intent);
            }
        });
        lv.setAdapter(arrayAdapter);
        lv.setTextFilterEnabled(false);
        filter = arrayAdapter.getFilter();
        setupSearchView();
    }

    public ArrayList createList(){

        SqliteDBHelper db = SqliteDBHelper.getInstance(null);
        ArrayList<String> scanList = db.query_select_list("SELECT DISTINCT " + SqliteDBHelper.SCAN_TIME + " FROM " + SqliteDBHelper.DATA_ANALYZING);

        return scanList;
    }
    private void setupSearchView(){
        sv.setIconifiedByDefault(false);
        sv.setOnQueryTextListener(
                new SearchView.OnQueryTextListener(){

                    @Override
                    public boolean onQueryTextSubmit(String query) {

                        return false;
                    }

                    @Override
                    public boolean onQueryTextChange(String newText) {
                            filter.filter(newText);
                        return true;
                    }
                }
        );
        // activates a submit button at the end of the SearchView
        // sv.setSubmitButtonEnabled(true);
        sv.setQueryHint("Search Here");
    }
}
